import { useState } from "react";
import Router from "next/router";
import auth from "../lib/auth";
import AppContext from "../context/AppContext";
import { useContext } from "react";
import FormUtil from "../components/common/form";
import Joi from "joi-browser";

function Register(props) {
  const [data, setData] = useState({ username: "", password: "", email: "" });

  const [errors, setErrors] = useState({});
  const { user, setUser } = useContext(AppContext);

  // I AM NOT CURRENTLY USING THIS NEXT LINE! USING TOAST MESSAGE GENERATED BY httpService
  // Use this logic if we want to display error messages under the input
  const [serverError, setServerError] = useState(null);

  const schema = {
    username: Joi.string().required().label("Username"),
    password: Joi.string().required().label("Password"),
    email: Joi.string().required().email().label("Email"),
  };

  async function doSubmit(e) {
    try {
      console.log("Heree");
      // Login and server will set cookie with name "auth"
      const response = await auth.register(
        data.username,
        data.password,
        data.email
      );
      const user = response.data.user;
      //   const response = await getMe();
      //   const user = response.data;
      setUser(user);
      Router.push("/");
    } catch (e) {
      alert("Registration Failed");
      console.error("Registration failed");
    }
  }

  const formUtil = new FormUtil(
    data,
    schema,
    errors,
    serverError,
    doSubmit,
    setData,
    setErrors,
    setServerError
  );

  return (
    <div>
      <h3>Register</h3>
      <form onSubmit={formUtil.handleSubmit}>
        {formUtil.renderInput(
          "username",
          "User Name",
          "text",
          null,
          null,
          false
        )}

        {formUtil.renderInput("email", "Email", "text", null, null, false)}

        {formUtil.renderInput(
          "password",
          "Password",
          "password",
          null,
          null,
          false
        )}
        {formUtil.renderButton("Submit")}
      </form>
    </div>
  );
}

export default Register;
