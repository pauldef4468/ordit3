import { useState } from "react";
import Router from "next/router";
import Link from "next/link";
import auth from "../lib/auth";
import AppContext from "../context/AppContext";
import { useContext } from "react";
import FormUtil from "../components/common/form";
import Joi from "joi-browser";

function Login(props) {
  const [data, setData] = useState({ username: "user1", password: "user123" });
  const [error, setError] = useState("");

  const [errors, setErrors] = useState({});
  const { user, setUser } = useContext(AppContext);

  // I AM NOT CURRENTLY USING THIS NEXT LINE! USING TOAST MESSAGE GENERATED BY httpService
  // Use this logic if we want to display error messages under the input
  const [serverError, setServerError] = useState(null);

  const schema = {
    username: Joi.string().required().label("Username"),
    password: Joi.string().required().label("Password"),
  };

  async function doSubmit(e) {
    // e.preventDefault();
    try {
      // Login and server will set cookie with name "auth"
      const response = await auth.login(data.username, data.password);
      const user = response.data.user;
      setUser(user);
      Router.push("/");
    } catch (e) {
      setError("Login Failed");
      console.error("Login failed");
    }
  }

  const formUtil = new FormUtil(
    data,
    schema,
    errors,
    serverError,
    doSubmit,
    setData,
    setErrors,
    setServerError
  );

  return (
    <>
      <h3>Login</h3>
      <form onSubmit={formUtil.handleSubmit}>
        {formUtil.renderInput(
          "username",
          "User Name or Email",
          "text",
          null,
          null,
          false
        )}
        {formUtil.renderInput(
          "password",
          "Password",
          "password",
          null,
          null,
          false
        )}
        {formUtil.renderButton("Submit")}

        <div>
          <Link href="/forgotpw">
            <a>Forgot Password&nbsp;</a>
          </Link>
        </div>
        {error && <p style={{ color: "red" }}>Login Failed!</p>}
      </form>
    </>
  );
}

export default Login;
